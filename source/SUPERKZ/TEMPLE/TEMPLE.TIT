{//-------------------------------------------------------------------------}
{/*                                                                         }
{Copyright (C) 1987, 2009 - Apogee Software, Ltd.                           }
{                                                                           }
{This file is part of Kroz. Kroz is free software; you can redistribute it  }
{and/or modify it under the terms of the GNU General Public License         }
{as published by the Free Software Foundation; either version 2             }
{of the License, or (at your option) any later version.                     }
{                                                                           }
{This program is distributed in the hope that it will be useful,            }
{but WITHOUT ANY WARRANTY; without even the implied warranty of             }
{MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.                       }
{                                                                           }
{See the GNU General Public License for more details.                       }
{                                                                           }
{You should have received a copy of the GNU General Public License          }
{along with this program; if not, write to the Free Software                }
{Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.}
{                                                                           }
{Original Source: 1987-1990 Scott Miller                                    }
{Prepared for public release: 03/19/09 - Joe Siegler, Apogee Software, Ltd. }
{*/                                                                         }
{//-------------------------------------------------------------------------}
{*** TEMPLE OF KROZ title screen procedure.  By Scott Miller 08/31/89 ***}

procedure Print(XPos,YPos:byte; Message:Str80);
 begin
  gotoxy(XPos,YPos);
  write(Message);
 end;

procedure PrintNum(YPos:byte; Num:longint);
 begin
  gotoxy(70,YPos);
  write('       ');
  str(Num,StrVal);
  if (YPos=2) and (Score>0) then StrVal:=StrVal+'0';
  if (YPos=11) then 
    case WhipPower of
     0..3:;
     4..5:StrVal:=StrVal+'+'
     else StrVal:=StrVal+'++';
    end; 
  gotoxy(73-length(StrVal) div 2,YPos);
  write(StrVal);
 end;

procedure Flash(XPos,YPos:byte;Message:Str80);
 var Counter : integer;
 begin
  Counter := 14;
  ClearKeys;
  repeat
   Counter := Counter + 1;
   if Counter > 15 then Counter := 13;
   col(Counter,15);
   delay(20);
   print(XPos,YPos,Message);
  until keypressed;
  Restore_Border;
 end;

procedure Play(Start,Stop,Speed:integer);
  var x:integer;
 begin
  if Start<=Stop then
   for x:=Start to Stop do begin sound(x);delay(Speed)end
  else
   for x:=Start downto Stop do begin sound(x);delay(Speed) end;
  nosound;
 end; { Play }

procedure Update_Info;
 begin
  bak(7,0);col(4,7);
  printnum(2,Score);
  printnum(5,Level);
  if Gems > 9 then printnum(8,Gems)
  else begin col(20,23);printnum(8,Gems);col(4,7);end;
  printnum(11,Whips);
  printnum(14,Teleports);
  printnum(17,Keys);
  bak(0,0);
 end; { Update_Info }

procedure AddScore(What:integer);
 begin
  case What of
   {Monsters}  1..3:Score:=Score+What;
   {Block}     4,14:if Score > 2 then Score:=Score-2;
   {Whip}      5:Score:=Score+1;
   {Stairs}    6:Score:=Score+Level;
   {Chest}     7:Score:=Score+5;
   {Gem}       9:Score:=Score+1;
   {Invisible} 10:Score:=Score+10;
   {Teleport}  11:Score:=Score+1;
   {SpeedTime} 15:Score:=Score+2;
   {Trap}      16:if Score>5 then Score:=Score-5;
   {Lava}      22:Score:=Score+25;
   {Border}    20:if Score > Level then Score:=Score-(Level div 2);
   {Nugget}    27:Score:=Score+50;
   {Create}    35:Score:=Score+Level*2;
   {Generator} 36:Score:=Score+50;
   {MBlock}    38:Score:=Score+1;
  end;
  Update_Info;
 end; { AddScore }

procedure Screen;
 begin
  ClearKeys;
  Color := true;
  bak(0,0);
  clrscr;
  bor(3);
  cur(3);
  col(9,9);
  gotoxy(33,3);
  write('TEMPLE OF KROZ');
  gotoxy(18,10);
  col(15,7);
  write('Is your screen Color or Monochrome (C/M)? C');
  gotoxy(wherex-1,wherey);cur(2);
  read(kbd,ch);
  if upcase(ch)='M' then
   begin
    textmode(BW80);
    Color := false;
   end
  else Color := true;
  bak(0,0);
  gotoxy(18,10);
  delline;
  gotoxy(9,17);
  textcolor(7);
  write('If you have an older PC (like an XT model) choose "S" for Slow.');
  gotoxy(10,19);
  write('If you have a PC AT, 80386 chip, etc., choose "F" for Fast.');
  gotoxy(32,21);
  write('(Default = Slow)');
  col(15,15);
  gotoxy(28,14);
  write('Slow or Fast PC (S/F)? S');
  gotoxy(wherex-1,wherey);
  read(kbd,ch);
  if upcase(ch) = 'F' then FastPC := true else FastPC := false;
  clrscr;
 end;

procedure Border;
 begin
  gotoxy(1,24);
  BC:=random(8)+8;
  BB:=random(7)+1;
  col(BC,0);bak(BB,7);
  for i:=1 to 66 do
   begin
    gotoxy(i,25);
    write(Block);
    gotoxy(i,1);
    write(Block);
   end;
  for i:=2 to 24 do
   begin
    gotoxy(1,i);
    write(Block);
    gotoxy(66,i);
    write(Block);
   end;
  bak(0,0);
  end; { Border }

procedure Restore_Border;
 begin    { Restores the bottom line of the border }
  gotoxy(2,25);
  col(BC,0);bak(BB,7);
  for x:=1 to 64 do write(Block);
  bak(0,0);
 end; { Restore_Border }

procedure Init_Screen;
 begin
  Slow     := #142;
  Medium   := #153;
  Fast     := #234;
  Restart  := false;
  Score    := 0;
  Level    := 1;
  Whips    := 5;
  Teleports:= 0;
  Keys     := 0;
  WhipPower:= 2;
  case Difficulty of
    9:begin Gems:=250;Whips:=100;Teleports:=50;Keys:=1;WhipPower:=3; end;
    8:begin Gems:=25; whips:=10; end;
    5:Gems:=18;
    2:Gems:=10
  end;
  Replacement:= Null;
  Bonus      := 0;
  LavaFlow   := false;
  HideCreate := false;
  HideOpenWall:=false;
  FoundSet   := [];
  GenNum     := 0;
  if FastPC then GenFactor := 28
  else           GenFactor := 17;
  if MixUp then
   begin
    Gems     :=40;
    Whips    :=20;
    Teleports:=5;
    Keys     :=1;
    FoundSet :=[0..ToTObjects];
   end;
  PX       := random(XSize)+XBot;
  PY       := random(YSize)+YBot;
  if FastPC then BTime := 9  else BTime := 2;
  if FastPC then STime := 10 else STime := 3;
  if FastPC then MTime := 8  else MTime := 2;
  if FastPC then FTime := 6  else FTime := 1;
  SkipTime := 0;
  for x:=1 to TMax do T[x]:=-1; {***** reset timers *****}
  T[1]     := 5;
  T[2]     := 6;
  T[3]     := 7;
  T[8]     := 6;
  if Color then
   begin
    window(67,1,80,25);
    bak(1,0);
    clrscr;
    window(1,1,80,25);
   end;
  col(14,7);
  print(71,1,'Score');
  print(71,4,'Level');
  print(71,7,'Gems');
  print(71,10,'Whips');
  print(69,13,'Teleports');
  print(71,16,'Keys');
  col(11,7);bak(4,0);
  print(70,19,'OPTIONS');
  bak(1,0);
  gotoxy(70,20);col(15,15);write('W');col(7,7);write('hip');
  gotoxy(70,21);col(15,15);write('T');col(7,7);write('eleport');
  gotoxy(70,22);col(15,15);write('P');col(7,7);write('ause');
  gotoxy(70,23);col(15,15);write('Q');col(7,7);write('uit');
  gotoxy(70,24);col(15,15);write('S');col(7,7);write('ave');
  gotoxy(70,25);col(15,15);write('R');col(7,7);write('estore');
 end; { Init_Screen }

procedure Title;
 var StartGame : boolean;
 label DESCENT;
 begin
  nosound;
  ClearKeys;
  bak(1,0);bor(4);
  clrscr;cur(3);
  gotoxy(32,1);
  col(4,7);bak(1,0);
  write('‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹‹');
  gotoxy(32,3);
  write('ﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂﬂ');
  gotoxy(25,5);col(15,15);
  write('An Apogee Software Production');
  gotoxy(28,7);
  write('Created by Scott Miller');
  gotoxy(1,9);col(11,7);
  writeln('  You''ve discovered a new passage leading deep into the trecherous kingdom of');
  writeln('  Kroz.  A message reveals that the Holy Grail awaits somewhere below.   With');
  writeln('  your worn lantern you journey downward void of fear,  sweat beading on your');
  writeln('  forehead as you anticipate great treasures.  Undoubtedly, the Grail must be');
  writeln('  guarded by unspeakable dangers.  Still, armed with a whip and great courage');
  writeln('           you decide to continue your quest, and journey downward...');
  gotoxy(1,17);col(10,7);
  write('         Use the cursor keys to move yourself (');
  col(14,15);write(#2);col(10,7);
  writeln(') through the kingdom.');
  writeln('            Use your whip (press W) to destroy all nearby creatures.');
  writeln('       You are on your own to discover what other mysteries await--some');
  writeln('                           helpful, others deadly...');
  col(14,7);
  gotoxy(13,22);
  write('Are you a ');col(15,15);write('N');col(14,7);
  write('ovice, an ');col(15,15);write('E');col(14,7);
  write('xperienced or an ');col(15,15);write('A');col(14,7);
  write('dvanced player?');
  col(28,16);write(#219);
  sound(220);delay(100);nosound;
  bak(4,7);
  repeat
   repeat
    gotoxy(32,2);col(random(16),0);write(' TEMPLE OF KROZ ');delay(50);
   until keypressed;
   read(kbd,ch);
   sound(300);delay(100);nosound;
  until upcase(ch) in [#13,'N',' ','E','A','!'];
  sound(700);delay(100);nosound;
  gotoxy(13,22);col(0,0);bak(1,0);
  for x:=1 to 28 do write('  ');
  col(30,31);bak(1,0);
  case upcase(ch) of
   'N',' ',#13:begin Difficulty:=8;gotoxy(37,22);write('NOVICE');end;
   'E':begin Difficulty:=5;gotoxy(34,22);write('EXPERIENCED');end;
   'A':begin Difficulty:=2;gotoxy(36,22);write('ADVANCED');end;
   '!':begin Difficulty:=9;gotoxy(34,22);write('SECRET MODE');end;
  end;
  ClearKeys;
  gotoxy(33,25);
  col(7,7);
  write('Press any key.');
  bak(4,7);
  repeat
   gotoxy(32,2);col(random(16),0);write(' TEMPLE OF KROZ ');delay(50);
  until keypressed;
  ClearKeys;
  
  Shareware(true);
  
  { New menu screen starts here. }
  StartGame := false;
  repeat
   bor(1);
   bak(0,0);
   clrscr;
   cur(3);
   col(15,9);
   gotoxy(33,2);
   write('TEMPLE OF KROZ');
   gotoxy(17,4);
   col(6,7);
   write('Copyright (c) 1990 Apogee Software Productions');
   gotoxy(7,6);
   write('Version 1.1 -- Volume II of the Super Kroz Trilogy by Scott Miller');
   gotoxy(4,8);
   col(2,7);
   writeln('THIS GAME MAY NOT BE DISTRIBUTED BY SHAREWARE OR PUBLIC DOMAIN LIBRARIES,');
   gotoxy(6,9);
   write('NOR BULLETIN BOARD SYSTEMS.  ONLY ');
   col(10,15);write('RETURN TO KROZ');
   col(2,7);writeln(' MAY BE FREELY SHARED.');
   gotoxy(1,11);
   col(4,7);
   for x := 1 to 80 do write(#196);
   col(14,15);
   gotoxy(28,13);
   write('B');
   col(11,7);
   write('egin your descent into Kroz...');
   col(14,15);
   gotoxy(28,15);
   write('I');
   col(11,7);
   write('nstructions');
   col(14,15);
   gotoxy(28,17);
   write('M');
   col(11,7);
   write('arketing Kroz');
   col(14,15);
   gotoxy(28,19);
   write('S');
   col(11,7);
   write('tory Behind Kroz');
   col(14,15);
   gotoxy(28,21);
   write('O');
   col(11,7);
   write('riginal Kroz Trilogy');
   gotoxy(27,24);
   col(15,0);bak(1,7);
   write('Your choice (B/I/M/S/O)? B');gotoxy(wherex-1,wherey);
   cur(2);
   ClearKeys;
   read(kbd,ch);
   if upcase(ch)='R' then MixUp:=true else MixUp:=false;
   ClearKeys;
   cur(3);
   case upcase(ch) of
    'B':begin
         DESCENT:
         for x:=40 downto 4 do
          for y := 100 downto 20 do
           begin sound(x*y);delay(1);end;
         nosound;
         StartGame := true;
        end;
    'I':begin
         bak(1,0);
         bor(4);
         clrscr;
         cur(3);
         ClearKeys;
         gotoxy(32,2);col(14,7);writeln('THE INSTRUCTIONS');
         gotoxy(32,3);          writeln('ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ');
         writeln;
         col(15,7);
         writeln('   Temple of Kroz is a game of exploration and survival.  Your journey will');
         writeln(' take you through 20 very dangerous chambers, each riddled with diabolical');
         writeln(' traps and hideous creatures.   Hidden in the deepest chamber lies the');
         writeln(' priceless Grail of Kroz--your quest. Use the cursor pad to move 8 directions.');
         writeln('   The chambers contain dozens of treasures, spells, traps and other unknowns.');
         writeln(' Touching an object for the first time will reveal a little of its identity,');
         writeln(' but it will be left to you to decide how best to use it--or avoid it.');
         writeln('   When a creature touches you it will vanish, taking with it a few of your');
         writeln(' gems that you have collected. If you have no gems then the creature will');
         writeln(' instead take your life!  Whips can be used to kill nearby creatures, but');
         writeln(' they''re better used to smash through "crumbled walls" and other terrain.');
         writeln('   PCjr players can use');
         writeln(' the alternate cursor                 U I O      ( NW N NE )');
         writeln(' pad instead of the cursor             J K       (   W E   )');
         writeln(' keys to move your man, and           N M ,      ( SW S SE )');
         writeln(' the four normal cursor keys.');
         writeln('   It''s a good idea to save your game at every new level, therefore, if you die');
         writeln(' you can easily restore the game at that level and try again.');
         writeln('   Registered users will receive a "Hidden Tricks and Hints" sheet.');
         flash(27,25,'Press any key to continue.');
         bak(1,0);
         clrscr;
         cur(3);
         ClearKeys;
         gotoxy(32,2);col(14,7);writeln('THE INSTRUCTIONS');
         gotoxy(32,3);          writeln('ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ');
         writeln;
         col(15,7);
         writeln('   Temple of Kroz will present you with many challenges.  You will venture deep');
         writeln(' underground and probably not make it out alive!');
         writeln;
         writeln(' Hints:  * Use your player to touch each new object to find out about it.  When');
         writeln('           you first touch an object a message appears at the bottom of the');
         writeln('           screen that describes it.');
         writeln('         * Collect keys to unlock doors, which usually block the stairs going.');
         writeln('         * The faster monsters are the most dangerous to touch--they will knock');
         writeln('           off three of your valuable gems.  The slowest creatures only take a');
         writeln('           single gem from you, and the medium speed monsters take two.');
         writeln('         * Nearly every new level presents you with new objects to discover.');
         writeln('         * Don''t forget to use the Home, End, PgUp, and PgDn keys to move your');
         writeln('           on-screen character diagonally (along with the marked cursor keys).');
         writeln;
         writeln('   To prove to you that this game CAN be completed, let me say (or brag) that I');
         writeln(' have finished this game on the "Advanced" skill level, with over 160 gems and');
         writeln(' 70 whips left to spare.  On the "Novice" level I can play and win one handed!');
         writeln('   There''s many secret tricks in this game that can help you, but even');
         writeln(' without these hidden maneuvers you can complete Temple of Kroz.');
         flash(27,25,'Press any key to continue.');
        end;
    'M':begin
         bor(10);
         bak(1,0);
         clrscr;
         ClearKeys;
         cur(3);
         gotoxy(29,2);col(14,7);writeln('THE MARKETING OF KROZ');
         gotoxy(29,3);          writeln('ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ');
         writeln;
         col(15,7);
         writeln('   Temple of Kroz is a user-supported game.  This means that the creator of');
         writeln(' this program relies on the appreciation of honest players to pay the game''s');
         writeln(' minimal registration fee--$7.50.');
         writeln('   Payment of this fee entitles you to all the free help and hints you might');
         writeln(' need to enjoy the game.  All letters from registered users are answered');
         writeln(' within two days.  (Try to get this kind of support from commercial games!)');
         writeln('   Also, players can order the other Kroz sequels ONLY if this first');
         writeln(' registration fee is paid.  ($7.50 each or $20 for all three games.)');
         writeln('   Everyone who orders (or registers) all three of the Super Kroz Trilogy also');
         writeln(' get a "Hints, Tricks and Scoring Secrets" guide, and "The Domain of Kroz" map.');
         writeln('   A single Kroz game takes nearly six months to create, or, over 200 hours!');
         writeln(' I can''t afford to devote this much time without receiving something in return.');
         writeln(' That is why I ask for this small fee, which is only necessary if you enjoy');
         writeln(' this game.  In other words, try before you buy.');
         writeln('   Even if you buy this game from a public domain or shareware library, I don''t');
         writeln(' receive any of that money.  You''re simply paying for "storage, distribution,');
         writeln(' disk, and handling".');
         writeln;
         writeln('   -- Scott Miller, President, Apogee Software Productions');
         flash(27,25,'Press any key to continue.');
        end;
    'S':begin
         bor(13);
         bak(1,0);
         clrscr;
         ClearKeys;
         cur(3);
         gotoxy(29,2);col(14,7);writeln('THE STORY BEHIND KROZ');
         gotoxy(29,3);          writeln('ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ');
         writeln;
         col(15,7);
         writeln('   The original Kroz Trilogy (consisting of Caverns of Kroz, Dungeons of Kroz,');
         writeln(' and Kingdom of Kroz) was developed after I spent many hours playing another');
         writeln(' explore-the-levels type game titled Rogue.  I never could finish Rogue,');
         writeln(' though, because the game relied too much on luck and random occurrences.');
         writeln('   The name "Kroz" is actually Zork (an Infocom text adventure) spelled in');
         writeln(' reverse.  Many players still inquire about this bit of trivia.  The game was');
         writeln(' first designed without predefined level layouts, meaning every level was a');
         writeln(' random placement of creatures and play field objects.  New objects, like');
         writeln(' spells, lava, doors, etc., were added quickly as the first Kroz game took');
         writeln(' shape, including the ability to have predefined level floor plans.');
         writeln('   One of my objects was to create a game that wasn''t all fast paced action,');
         writeln(' but also included strategy and puzzle solving.  Kingdom of Kroz was entered');
         writeln(' in a national programming contest in 1988 and took top honors in the game');
         writeln(' category, and number two overall (beat out by a spreadsheet program).');
         writeln('   The latest Kroz Trilogy has been greatly re-designed and re-programmed, but');
         writeln(' the familiar appearance has been mostly maintained.  You will discover new');
         writeln(' dangers, creatures and objects in your adventures below.  Good luck...');
         writeln('   The Lost Adventures of Kroz is the latest and greatest of the epic Kroz');
         writeln(' saga, with 75 all-new, puzzle-packed levels.  Will be ready by January 1990.');
         flash(27,25,'Press any key to continue.');
        end;
    'O':begin
         bor(15);
         bak(1,0);
         clrscr;
         ClearKeys;
         cur(3);
         gotoxy(27,2);col(14,7);writeln('THE ORIGINAL KROZ TRILOGY');
         gotoxy(27,3);          writeln('ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ');
         writeln;
         col(15,7);
         writeln('   The original three Kroz games were such a tremendous success that I was');
         writeln(' obliged to make this second, and probably final trilogy.  The first three');
         writeln(' Kroz games are:   * Kingdom of Kroz  * Caverns of Kroz  * Dungeons of Kroz.');
         writeln(' All three are still available and are constantly being updated and improved.');
         writeln('   The original Kroz Trilogy games can be purchased for $7.50 each, or all 3');
         writeln(' for $15 (these prices include postage, disks, and handling).');
         writeln('   Only Kingdom of Kroz can be placed in a shareware library for distribution,');
         writeln(' and the other two can only be ordered from Apogee Software Productions.');
         writeln('   To purchase these games please make checks payable to Apogee Software, and');
         writeln(' mail to:  4206 Mayflower ˘ Garland, TX 75043.  Call 214/240-0614 for info.');
         writeln(' This address will always be valid, but you can call to verify if you need to.');
         writeln('   These Kroz games feature a total of 95 new, unique levels.  Kingdom of Kroz');
         writeln(' took the title of "Best Game" in a 1988 national programming competition.');
         writeln('   All Kroz games work on all monitors, either graphics or monochrome systems.');
         writeln(' Plus, they only rely on keyboard control, and have slow-down routines that');
         writeln(' permit them to function correctly on any speed IBM PC compatible computer.');
         writeln('   ASP also sells an "Adventure FUN-PAK", that contains four games that are');
         writeln(' similar to the Kroz games in style.  This FUN-PAK (there''s also a "Puzzle');
         writeln(' FUN-PAK" avalaible) is sold for $10, which includes shipping.  Thank you.');
         flash(27,25,'Press any key to continue.');
        end
    else goto DESCENT;
   end;
  until StartGame;
  bak(0,0);
  clrscr;
  bor(4);
 end; { Title }

procedure High_Score(PlayAgain:boolean);
  var x,
      Place : integer;
      Stop  : boolean;
 begin
  ClearKeys;
  window(2,2,XSize+1,YSize+1);
  bak(0,0);clrscr;
  window(1,1,80,25);
  cur(3);
  assign(HSFile,'TEMPLE.HS');
  {$I-}
  reset(HSFile);
  {$I+}
  if IOResult <> 0 then
   begin
    rewrite(HSFile);
    for x:=1 to 15 do
     with HSList[x] do
      begin
       case x of
        1:begin Name:='Scott Miller';HighScore:=9963;HighLevel:=9;end;
        2:begin Name:='Terry Nagy';HighScore:=5842;HighLevel:=6;end
        else begin Name:='-----';HighScore:=0;HighLevel:=0;end
       end;
       write(HSFile,HSList[x]);
      end;
    close(HSFile);
   end;
  col(9,9);
  gotoxy(28,3);
  write('TEMPLE OF KROZ');
  col(11,7);
  gotoxy(16,5);write('NAME');
  gotoxy(33,5);write('HIGH SCORE');
  gotoxy(49,5);write('LEVEL');
  reset(HSFile);
  for x:=1 to 15 do
   read(HSFile,HSList[x]);
  Place:=1;
  Stop:=false;
  repeat
   if Score>HSList[Place].HighScore then Stop:=true;
   Place:=Place+1;
   if not Stop and (Place>15) then Place:=100;
  until Stop or (Place>15);
  Place:=Place-1;
  if Place<16 then
   for x:=15 downto Place do
    HSList[x]:=HSList[x-1];
  with HSList[Place] do
   begin
    Name:='';
    HighScore:=Score;
    HighLevel:=Level;
   end;
  for x:=1 to 15 do
   begin
    if odd(x) then col(12,7) else col(13,7);
    with HSList[x] do
     begin
      gotoxy(13,x+6);write(x:2);
      gotoxy(16,x+6);write(Name);
      gotoxy(36,x+6);write(HighScore);if HighScore>0 then write('0');
      gotoxy(50,x+6);write(HighLevel);
     end;
   end;
  close(HSFile);
  ClearKeys;
  if Place<16 then
   begin
    bak(4,7);
    gotoxy(16,Place+6);
    write('               ');
    col(4,0);
    bak(7,7);
    gotoxy(15,23);
    write('Enter your name then press <enter>.');
    col(15,15);
    bak(4,7);
    gotoxy(16,Place+6);
    cur(2);
    readln(HSList[Place].Name);
    cur(3);
    rewrite(HSFile);
    for x:=1 to 15 do write(HSFile,HSList[x]);
    close(HSFile);
   end;
  bak(0,0);
  gotoxy(15,23);
  write('                                   ');
  for x:=1 to 999 do
   begin
    SX[x]:=0;SY[x]:=0;
    MX[x]:=0;MY[x]:=0;
    FX[x]:=0;FY[x]:=0;
    BX[x]:=0;BY[x]:=0;
   end;
  if PlayAgain then
   Flash(14,25,'Do you want to play another game (Y/N)?')
  else
   begin
    ch:='N';
    Flash(21,25,'Press any key to continue.');
   end;
  if PlayAgain then read(kbd,ch);
  if upcase(ch) <> 'N' then Restart:=true
  else
   begin
    bak(0,0);col(15,15);bor(0);cur(1);
    clrscr;
    if not PlayAgain then
     begin
      gotoxy(1,2);
      writeln('Congratulations for completing TEMPLE OF KROZ!');
     end
    else
     begin
      gotoxy(16,2);
      writeln('TEMPLE OF KROZ');
     end;
    Sign_Off;
   end;
 end; { High_Score }

procedure Won;
 begin
  Border;
  ClearKeys;
  col(16,31);bak(BB,0);
  print(12,1,'YOUR QUEST FOR THE HOLY GRAIL WAS SUCCESSFUL!');
  bak(0,0);
  High_Score(false);
 end; { Dead }

procedure Dead(DeadDot: boolean);
 begin
  if Gems>9 then col(4,7)
  else
   begin Gems:=0;col(20,23);end;
  bak(7,0);
  gotoxy(71,8);
  write('     ');
  str(Gems,StrVal);
  gotoxy(73-length(StrVal) div 2,8);
  write(StrVal);
  bak(0,0);
  if DeadDot then
   for x:=150 downto 5 do
    begin
     gotoxy(PX,PY);
     col(x,x);bak(random(8),0);
     write(Player);
     sound(x*x);
    end;
  nosound;
  ClearKeys;
  col(16,16);bak(BB,7);
  print(27,1,'YOU HAVE DIED!!');
  bak(0,0);
  repeat
   col(random(16),random(16));
   gotoxy(PX,PY);
   if DeadDot then write('*');
   print(21,25,'Press any key to continue.');
  until keypressed;
  Border;
  High_Score(true);
 end; { Dead }

procedure Parse_Field;
  var Slot,
      Counter,
      test  : integer;
      Fetch : string[4];
 begin
  Slot:=1;
  Counter:=1;
  repeat
   Fetch:=copy(DF[Level],Slot,3);
   if Fetch[1] = ' ' then begin Fetch:=Fetch[2]+Fetch[3];end;
   if Fetch[1] = ' ' then Fetch:=Fetch[2];
   val(Fetch,Parsed[Counter],test);
   Slot:=Slot+3;
   Counter:=Counter+1;
  until Counter > ToTObjects;
 end; { Parse_Field }

procedure Create_Playfield;
  var x,y,
      Obj,
      Loop,
      XSpot,
      YSpot : integer;
 begin
  SNum:=0; MNum:=0; FNum:=0; BNum:=0; GenNum:=0; LavaFlow := false;
  T[9]:=-1;
  for x:=1 to 999 do
   begin
    BX[x]:=0;BY[x]:=0;    {* reset monster's X, Y *}
    SX[x]:=0;SY[x]:=0;
    MX[x]:=0;MY[x]:=0;
    FX[x]:=0;FY[x]:=0;
   end;
  New_Gem_Color;
  for x:=XBot to XTop do
   for y:=YBot to YTop do PF[x,y]:=0;
  PF[PX,PY]:=40;
  Parse_Field;
  for Obj:=1 to ToTObjects do
    if Parsed[Obj] > 0 then
     for Loop:=1 to Parsed[Obj] do
      begin
       Done:=false;
        repeat
         XSpot:=random(XSize)+XBot;
         YSpot:=random(YSize)+YBot;
         if PF[XSpot,YSpot] = 0 then
          begin
           PF[XSpot,YSpot]:=Obj;Done:=true;
           case obj of
            1: begin SNum:=SNum+1;SX[SNum]:=XSpot;SY[SNum]:=YSpot;end;
            2: begin MNum:=MNum+1;MX[MNum]:=XSpot;MY[MNum]:=YSpot;end;
            3: begin FNum:=FNum+1;FX[FNum]:=XSpot;FY[FNum]:=YSpot;end;
            36:GenNum:=GenNum+1;
            38:begin BNum:=BNum+1;BX[BNum]:=XSpot;BY[BNum]:=YSpot;end;
            46:T[9]:=32000;
           end;
          end;
        until Done;
      end;
 end; { Create_Playfield }

procedure Display_Playfield;
  var XLoop,
      YLoop : integer;
 begin
  for XLoop:=XBot to XTop do
   for YLoop:=YBot to YTop do
    if PF[XLoop,YLoop] > 0 then
     begin
      gotoxy(XLoop,YLoop);
      case PF[XLoop,YLoop] of
       {Slow}      1:begin col(12,7);write(Slow)end;
       {Medium}    2:begin col(10,7);write(Medium)end;
       {Fast}      3:begin col(9,7);write(Fast)end;
       {Block}     4:begin col(6,7);write(Block)end;
       {Whip}      5:begin col(15,7);write(Whip)end;
       {Stairs}    6:begin bak(7,7);col(16,16);write(Stairs);bak(0,0)end;
       {Chest}     7:if random(20)=0 then begin col(15,7);write(Chance)end
                     else begin col(14,7);bak(4,0);write(Chest);bak(0,0)end;
       {SlowTime}  8:if random(35)=0 then begin col(15,7);write(Chance)end
                     else begin col(11,7);write(SlowTime)end;
       {Gem}       9:begin col(GemColor,7);write(Gem)end;
       {Invisible} 10:begin col(2,7);write(Invisible)end;
       {Teleport}  11:begin col(13,7);write(Teleport)end;
       {Key}       12:if random(25)=0 then begin col(15,7);write(Chance)end
                      else begin col(12,15);write(Key)end;
       {Door}      13:begin bak(5,7);col(3,0);write(Door);bak(0,0)end;
       {Wall}      14:begin col(6,7);write(Wall)end;
       {SpeedTime} 15:if random(10)=0 then begin col(15,7);write(Chance)end
                      else begin col(11,7);write(SpeedTime)end;
       {Trap}      16:if random(120)=0 then begin col(15,7);write(Chance)end 
                      else begin col(7,7);write(Trap)end;
       {River}     17:begin col(9,0);bak(1,7);write(River);bak(0,0)end;
       {Power}     18:if random(15)=0 then begin col(15,7);write(Chance)end
                      else begin col(15,7);bak(0,0);write(Power)end;
       {Forest}    19:begin col(6,0);bak(2,7);write(Forest);bak(0,0)end;
       {Tree}      20:begin col(6,0);bak(2,7);write(Tree);bak(0,0)end;
       {Bomb}      21:if random(40)=0 then begin col(15,7);write(Chance)end
                      else begin col(15,7);write(Bomb)end;
       {Lava}      22:begin col(12,16);bak(4,7);write(Lava);bak(0,0)end;
       {Pit}       23:begin col(7,7);write(Pit)end;
       {Grail}     24:begin col(15,15);write(Grail)end;
       {Tunnel}    25:begin col(15,7);write(Tunnel)end;
       {Freeze}    26:begin col(11,7);write(Freeze)end;
       {Nugget}    27:begin col(ArtColor,7);write(Nugget)end;
       {Quake}     28:if random(15)=0 then begin col(15,7);write(Chance)end;
       {IBlock}    29:;
       {IWall}     30:;
       {IDoor}     31:;
       {Stop}      32:;
       {Trap2}     33:;
       {Zap}       34:begin col(12,7);write(Zap)end;
       {Create}    35:if not HideCreate then begin col(15,7);write(Chance)end;
       {Generator} 36:begin col(30,31);write(Generator)end;
       {Trap3}     37:;
       {MBlock}    38:begin col(6,7);write(MBlock)end;
       {Trap4}     39:;
       {Player}    40:begin bak(7,7);col(16,16);write(Stairs);bak(0,0)end;
       {ShowGems}  41:;
       {Tablet}    42:begin col(9,7);write(Tablet)end;
       {ZBlock}    43:begin col(6,7);write(ZBlock)end;
       {BlockSpell}44:;
       {Chance}    45:begin col(15,7);write(Chance)end;
       {Statue}    46:begin col(31,23);write(Statue)end;
       { K }       48:begin col(14,7);write('K')end;
       { R }       49:begin col(14,7);write('R')end;
       { O }       50:begin col(14,7);write('O')end;
       { Z }       51:begin col(14,7);write('Z')end;
       {OWall1,2}  52,53:begin col(6,7);write(Wall)end;
       {OWall3}    54:begin col(7,7);write(Wall)end;
       {CWall1..3} 55..57:;
       {OSpell1..3}58..60:if not HideOpenWall then 
                      begin col(11,7);write(OSpell1)end;
       {CSpell1..3}61..63:;
       {GBlock}    64:begin col(7,7);write(GBlock)end;
       {WallVanish}47:if random(20)=0 then begin col(15,7);write(Chance)end
                      else begin end
       {LETTERS} else begin col(15,0);bak(6,7);
                       write(upcase(chr(PF[XLoop,YLoop])));bak(0,0);
                      end;
      end;
     end;
 end; { Display_Playfield }

function GetKey:byte;
      procedure BadKeySound;
       begin
        sound(540);delay(40);
        for x:=1 to 4 do
         begin sound(100);delay(15);nosound;delay(15) end;
        nosound;
       end;
  var key:char;
 begin
  if keypressed then
   begin
    read(kbd,key);
    if key=#27 then
     if keypressed then { key must be an extended character }
      begin
       read(kbd,key);
       if key in [#72,#80,#77,#75,#71,#79,#73,#81] then
        GetKey:=ord(key)+100
       else begin BadKeySound;GetKey:=0;end;
      end
     else GetKey:=81
    else { key must be an alpha character }
     case ord(key) of
      40:if Difficulty=9 then
          begin PF[PX+1,PY]:=6;sound(2000);delay(40);nosound;GetKey:=0;end;
      41:if Difficulty=9 then
          begin Gems:=150;Whips:=99;Teleports:=99;Keys:=9;GetKey:=0;Update_Info;end;
      119,87:GetKey:=87;       { Whip     }
      116,84:GetKey:=84;       { Teleport }
      112,80:GetKey:=80;       { Pause    }
      113,81:GetKey:=81;       { Quit     }
      115,83:GetKey:=83;       { Save     }
      114,82:GetKey:=82;       { Restore  }
      117,85:GetKey:=171;      { U-NW     }
      105,73:GetKey:=172;      { I-North  }
      111,79:GetKey:=173;      { O-NE     }
      106,74:GetKey:=175;      { J-West   }
      107,75:GetKey:=177;      { K-East   }
      110,78:GetKey:=179;      { N-SW     }
      109,77:GetKey:=180;      { M-South  }
      44    :GetKey:=181       { ,-SE     }
      else begin BadKeySound;GetKey:=0;end;
     end;
   end
  else GetKey:=0;
 end; { GetKey }

procedure Hit(X, Y:integer;ch:char);
  var i : integer;
      Thing : char;
 begin
  Thing:=char(PF[x,y]);
  bak(0,0);
  for i:=1 to ord(FastPC)*150+ord(not FastPC)*45 do
   begin col(random(16),15);gotoxy(x,y);write(ch);end;
  gotoxy(x,y);
  case integer(Thing) of
   1..3: begin
          PF[x,y]:=0;write(' ');Score:=Score+integer(Thing);
          sound(400);delay(20);sound(90);
         end;
   4,19,20:
         begin
          i:=WhipPower;if integer(Thing) = 19 then i:=8;
          case integer(Thing) of 4:Thing:=Block;19:Thing:=Forest;20:Thing:=Tree; end;
          if random(7) < i then
           begin write(' ');PF[x,y]:=0;
            for i:=ord(FastPC)*5700+ord(not FastPC)*3300 downto 20 do sound(random(i));sound(90);
           end
          else
           begin
            sound(130);delay(25);sound(90);
            col(6,7);
            if Thing in [Forest,Tree] then begin col(6,0);bak(2,7);end;
            write(Thing);
            if Thing in [Forest,Tree] then bak(0,0);
           end;
         end;
   6:    begin col(16,16);bak(7,7);write(Stairs);bak(0,0);end;
   10,15,16,18,36,48..51:
         begin
          PF[x,y]:=Null;write(' ');
          sound(400);delay(20);sound(90);
          if integer(Thing) = 36 then
           begin
             for i:=ord(FastPC)*5700+ord(not FastPC)*3300 downto 20 do
              sound(random(i));sound(90);
             AddScore(36);GenNum:=GenNum-1;
           end;
         end;
       5:begin col(15,7);write(Whip)end;
       7:begin col(14,7);bak(4,0);write(Chest);bak(0,0) end;
       8:begin col(11,7);write(SlowTime)end;
       9:begin col(GemColor,7);write(Gem)end;
      11:begin col(13,7);write(Teleport)end;
      12:begin col(12,15);write(Key)end;
      13:begin col(3,0);bak(5,7);write(Door);bak(0,0)end;
      14,52,53:begin col(6,7);write(Wall)end;
      54:begin col(7,7);write(Wall)end;
      17:begin col(9,0);bak(1,7);write(River);bak(0,0)end;
      21:begin col(15,7);write(Bomb)end;
      22:begin col(12,16);bak(4,7);write(Lava);bak(0,0)end;
      23:begin col(7,7);write(Pit)end;
      24:begin col(15,15);write(Grail)end;
      25:begin col(15,7);write(Tunnel)end;
      26:begin col(11,7);write(Freeze)end;
      27:begin col(ArtColor,7);write(Nugget);end;
      28..31,33,37,39,41,44:begin col(0,0);bak(0,0);write(' ')end;
      32:begin PF[x,y]:=Null;write(' ')end;
      34:begin col(12,7);write(Zap)end;
      35:begin col(14,7);write(Create)end;
      42:begin col(9,7);write(Tablet)end;
      45:begin col(15,7);write(Chance)end;
      58..60:begin col(11,7);write(OSpell1)end;
      47,55..57,61..63:write(' ');
      46:begin
          for i:=ord(FastPC)*5700+ord(not FastPC)*3300 downto 20 do
           sound(random(i));sound(90);
          if random(50)<WhipPower then
           begin write(' ');PF[x,y]:=0;
            for i:=1 to 32000 do sound(random(5000));
            for i:=18900 downto 20 do sound(random(i));nosound;
            Score:=Score+10;
            T[9]:=-1;
            Update_Info;
            ClearKeys;
            Flash(7,25,'You''ve destroyed the Statue!  Your Gems are now safe.');
            sound(90);
           end
          else begin col(31,23);write(Statue)end;  
         end;
      38,43,64:begin
          if random(7) < WhipPower then
           begin write(' ');PF[x,y]:=Null;
            for i:=ord(FastPC)*5700+ord(not FastPC)*3300 downto 20 do
             sound(random(i));sound(90);
            AddScore(38);
           end
          else
           begin
            sound(130);delay(25);sound(90);
            if integer(Thing) = 64 then col(7,7) else col(6,7);
            write(Block);
           end;
         end;
      0:write(' ')
   else begin
         PF[x,y]:=Null;write(' ');
         for i:=ord(FastPC)*2500+ord(not FastPC)*1500 downto 20 do
          sound(random(i));sound(90);
        end;
  end;
 end; { Hit }
